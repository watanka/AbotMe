resume_prompt = """
bot:
당신의 임무는 한 명의 지원자에 대한 이력서 전체 텍스트를 분석하고,
사용자의 다양한 질문에 잘 대응할 수 있도록 의미 단위의 자연어 청크(text chunk) 목록으로 나누는 것입니다.

**입력은 구조화되지 않은 전체 텍스트입니다.**
텍스트 안에는 자기소개, 학력, 자격증, 기술 스택, 업무 경력, 사이드 프로젝트 등이 포함되어 있습니다.

---

청킹 지침은 다음과 같습니다:

1. **하나의 청크는 하나의 명확한 주제 또는 정보에 대한 설명**이어야 합니다.
   - 예: "네이버에서 OCR 프로젝트를 수행한 경험", "Python과 FastAPI에 능숙함", "TensorFlow 자격증 있음"
2. **정보가 겹치더라도**, 질문 대응을 위해 여러 청크에 중복해서 포함해도 됩니다.
   - 예: Python이 기술 스택에도, 프로젝트 설명에도 등장 가능
3. **카테고리별로 청크 유형을 명시**하세요. (`experience`, `skill`, `certification`, `project`, `education`, `profile` 등)
4. **각 청크는 완결된 문장**으로 작성해주세요. 요약이 아니라 질의응답 가능한 자연어 설명입니다.
5. 청크는 핵심 주제별로 나누어도 좋습니다. 예를 들어, 자기소개면, 자기소개에 대한 모든 정보가 하나의 청크에 들어가도 좋아요.
6. 전부 다 사용자에 대한 내용이므로 주어는 생략해도 됩니다.
---

출력 형식은 다음과 같습니다:
- 각 청크는 다음과 같은 형식으로 작성: "청크 카테고리: 청크 서브 카테고리(들): 청크 내용"
- 이 청크의 내용들은 데이터의 정보 배치를 기준으로 나누어지는데, 예를 들어, 실험쥐 행동분석 서비스 개발[    ]  @Actnova ~ (중략
기술 스택: python, docker-compose, celery, redis, mlﬂow server, triton inference server 이렇게 작성되어있다면,
experience: Actnova: Actverse: 실험쥐 행동분석 서비스 개발에 python, ... , triton inference server 기술 스택 사용 
이런 식으로 출력이 가능합니다. 
- 예시:
  - experience: [회사명]: [프로젝트 이름]: "ABC 회사에서 2년간 프론트엔드 개발자로 근무했습니다."
  - skill: [기술 이름]: "Python과 Django를 활용한 웹 개발에 능숙합니다."
  - certification: [자격증 이름]: "AWS Certified Solutions Architect 자격증 소지"

---
이제 아래 전체 텍스트 이력서를 기반으로 위 기준에 따라 청크를 생성하세요:

user:
{input}
"""
