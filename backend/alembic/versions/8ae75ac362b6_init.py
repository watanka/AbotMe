"""init

Revision ID: 8ae75ac362b6
Revises:
Create Date: 2025-07-24 16:26:48.797868

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "8ae75ac362b6"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "chunk_groups",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "resumes",
        sa.Column("resume_id", sa.UUID(), nullable=False),
        sa.Column("pdf_url", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("resume_id"),
    )
    op.create_table(
        "chunks",
        sa.Column("label_id", sa.String(), nullable=False),
        sa.Column("resume_id", sa.UUID(), nullable=False),
        sa.Column("text", sa.String(), nullable=False),
        sa.Column("x0", sa.Float(), nullable=True),
        sa.Column("x1", sa.Float(), nullable=True),
        sa.Column("top", sa.Float(), nullable=True),
        sa.Column("bottom", sa.Float(), nullable=True),
        sa.Column("page_id", sa.Float(), nullable=True),
        sa.Column("chunk_group_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["chunk_group_id"],
            ["chunk_groups.id"],
        ),
        sa.ForeignKeyConstraint(
            ["resume_id"],
            ["resumes.resume_id"],
        ),
        sa.PrimaryKeyConstraint("label_id"),
    )
    op.create_table(
        "questions",
        sa.Column("question_id", sa.UUID(), nullable=False),
        sa.Column("resume_id", sa.UUID(), nullable=False),
        sa.Column("label_id", sa.String(), nullable=True),
        sa.Column("question", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["resume_id"],
            ["resumes.resume_id"],
        ),
        sa.PrimaryKeyConstraint("question_id"),
    )
    op.create_table(
        "answers",
        sa.Column("answer_id", sa.UUID(), nullable=False),
        sa.Column("question_id", sa.UUID(), nullable=False),
        sa.Column("answer", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["questions.question_id"],
        ),
        sa.PrimaryKeyConstraint("answer_id"),
    )
    op.create_table(
        "tags",
        sa.Column("tag_id", sa.UUID(), nullable=False),
        sa.Column("question_id", sa.UUID(), nullable=True),
        sa.Column(
            "tag_name",
            sa.Enum(
                "personal",
                "education",
                "experience",
                "project",
                "tech_stack",
                "achievement",
                "certificate",
                "award",
                "timeline",
                "summary",
                name="tag_category",
            ),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["questions.question_id"],
        ),
        sa.PrimaryKeyConstraint("tag_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("tags")
    op.drop_table("answers")
    op.drop_table("questions")
    op.drop_table("chunks")
    op.drop_table("resumes")
    op.drop_table("chunk_groups")
    # ### end Alembic commands ###
