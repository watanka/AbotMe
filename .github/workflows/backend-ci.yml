name: Backend CI

on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  backend-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "FRONTEND_URL=${{ secrets.FRONTEND_URL }}" > .env
          echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> .env
          echo "LANGFUSE_SECRET_KEY=${{ secrets.LANGFUSE_SECRET_KEY }}" >> .env
          echo "LANGFUSE_PUBLIC_KEY=${{ secrets.LANGFUSE_PUBLIC_KEY }}" >> .env
          echo "LANGFUSE_HOST=${{ secrets.LANGFUSE_HOST }}" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "NEO4J_URI=${{ secrets.NEO4J_URI }}" >> .env
          echo "NEO4J_USERNAME=${{ secrets.NEO4J_USERNAME }}" >> .env
          echo "NEO4J_PASSWORD=${{ secrets.NEO4J_PASSWORD }}" >> .env
          echo "ASSETS_DIR=${{ secrets.ASSETS_DIR }}" >> .env
          echo "GCS_FILE_STORAGE_URL=${{ secrets.GCS_FILE_STORAGE_URL }}" >> .env

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        run: pip install uv

      - name: Install dependencies
        run: uv pip install --system -r requirements.txt

      - name: Lint (flake8)
        run: |
          pip install flake8
          flake8 .

      - name: Run tests (pytest)
        run: |
          
          uv run pytest 